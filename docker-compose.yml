version: "3.8"

networks:
  app-network:
    driver: overlay

services:
  traefik:
    image: traefik:v2.10
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    networks:
      - app-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # EntryPoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Providers
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"    # enable 라벨 추가한 컨테이너만 노출
      # API
      - "--api.dashboard=true"
      - "--api.insecure=true"
      # log
      - "--log.level=DEBUG"
      - "--accesslog"
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=PathPrefix(`/traefik`)"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.entrypoints=web"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  app:
    image: ${DOCKER_IMAGE}
    networks:
      - app-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == worker
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.app.rule=PathPrefix(`/`)"
        - "traefik.http.routers.app.entrypoints=web,websecure"
        - "traefik.http.services.app.loadbalancer.server.port=80"
        # - "traefik.http.services.app.loadbalancer.sticky.cookie.name=traefik-sticky-cookie"
        - "traefik.http.middlewares.websocket.headers.customrequestheaders.Connection=Upgrade"
        - "traefik.http.middlewares.websocket.headers.customrequestheaders.Upgrade=websocket"
